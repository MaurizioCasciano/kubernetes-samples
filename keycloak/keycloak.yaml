apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: auth-system
  labels:
    app: keycloak
spec:
  ports:
  - name: keycloak
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: keycloak
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: auth-system
  name: keycloak
  annotations:
spec:
  rules:
  - host: sso.noverit.com
    http:
      paths:
      - path: /
        backend:
          serviceName: keycloak
          servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: auth-system
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - name: keycloak
        image: jboss/keycloak:8.0.2
        imagePullPolicy: Always
        env:
        - name: KEYCLOAK_USER
          value: admin
        - name: KEYCLOAK_PASSWORD
          value: password
        - name: DB_VENDOR
          value: H2
        - name: JGROUPS_DISCOVERY_PROTOCOL
          value: dns.DNS_PING
        - name: JGROUPS_DISCOVERY_PROPERTIES
          value: dns_query=keycloak.auth-system.svc.cluster.local
        - name: PROXY_ADDRESS_FORWARDING
          value: 'true'
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: https
          containerPort: 8443
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /auth/realms/master
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /auth/realms/master
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 20
        resources: